<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cd on Kurt Madel</title>
    <link>https://kurtmadel.com/tags/cd/</link>
    <description>Recent content in Cd on Kurt Madel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2018 Kurt Madel All Rights Reserved</copyright>
    <lastBuildDate>Fri, 25 May 2018 12:49:15 -0400</lastBuildDate>
    
	<atom:link href="https://kurtmadel.com/tags/cd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Segregating Jenkins Agents on Kubernetes</title>
      <link>https://kurtmadel.com/posts/cicd-with-kubernetes/segregating-jenkins-agents-on-kubernetes/</link>
      <pubDate>Fri, 25 May 2018 12:49:15 -0400</pubDate>
      
      <guid>https://kurtmadel.com/posts/cicd-with-kubernetes/segregating-jenkins-agents-on-kubernetes/</guid>
      <description>This is the first part in the series CI/CD on Kubernetes. In this part we will explore the use of Kubernetes Namespaces and the Kubernetes PodNodeSelector Admission Controller to segregate Jenkins agent workloads from the Jenkins server (or master) workloads - as well as other workloads on the Kubernetes cluster. As we continue on with the series we will see why this will serve as an important foundation for managing Kubernetes configuration for Jenkins agent related features such as autoscaling, resource quotas and security constraints.</description>
    </item>
    
  </channel>
</rss>